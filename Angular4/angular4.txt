---
Ресурсы:

// оф сайт
- [ https://angular.io/ ]

// уроки
- [ https://coursehunters.net/course/udemy-angular-4-2-the-complete-guide ]
 


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [Angular4] это фреймворк для создания [front] в основе [JavaScript]
  - (*) [ https://metanit.com/web/angular2/1.1.php ]




1) устанавливаем 
  - [!] [ https://community.vscale.io/hc/ru/community/posts/209000165-%D0%9A%D0%B0%D0%BA-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-Node-js-%D0%BD%D0%B0-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80-%D1%81-Ubuntu-16-04 ]
  - [*] у нас должен быть установлен [ nodejs ]
    - Установка через NVM. Node Version Manager это лучший из всех вариантов установки
    - качаем [ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash ]
    - После запуска скрипта нам нужно будет выйти из консоли и войти заново, чтобы функциональность nvm стала доступна.
    - проверяем [  nvm --version ]
    - [ nvm ls-remote ] получаем список доступных версий
      - (*) выбираем [ v8.11.1   (Latest LTS: Carbon) ]
    - [ nvm install 8.11.1 ]
    - посмотреть установленные версии [ nvm ls ]
  - устанавливаем [ sudo npm install -g @angular/cli ]
  - переходим в дерикторию пустую и пытаемся создать проектик:
    - создаем [ ng new <имя проекта> ]
    - в дериктории созданного проекта запускаем его [ ng server ]
    - запустится сервер с приложением по [ localhost:4200 ]
  - [!] создаем в IDEA файл gitignore для можкля Angular и он сам заполнится


2) надо бы настроить можуль [ angular ] и [ maven ]
  - создаем новый модуль, там создаем ангуляр проект [ ng new <имя проекта> ]
  - в IDEA ставим плагин для ангуляра [AngularJS]
  - собираем модуль [ ng build ]
  - запустим модуль [ ng serve ] -> [ http://localhost:4200/ ]


3) разбираемся как устроен фреймворк:
  - [src/app] это код нашего приложения
    - [ app.component.ts ] это наш компонент, это основной кирпичек приложения
      - в компоненте указывается путь до файла шаблона, файла стилей и определяется
        селектор - это тег на мести которрого этот модуль ставится. 
      - в компоненте работаем с переменными и можем их связывать с значениями в шаблоне
  - [index.html] это главный шаблон туда вставляется наш модуль в [<app-root></app-root>]
  - [main.ts] это основной модуль, в нем запуск написан


4) начинаем пилить потихоньку
  - чтобы стили особо не писать самому подключим библиотеку
    - [ http://materializecss.com/ ]  
    - копируем две ссылки в [index.html]:
      [
  <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css">

    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js"></script>
      ]












[?] nop
  - nop

 
 
// #c 
#----------------------------------------------- 

 

#----------------------------------------------- 
 

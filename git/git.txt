---
Ресурсы:

// оф сайт
- [ https://git-scm.com/ ]
 


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [git] система контроля версий есть аналог [svn]




*) установка [ sudo apt install git ]


1) Создали учетную запись на [github.com]
  - Username [dzhukov40]
  - Email    [dzhukov40.v@mail.ru]
  - Password [Doc...]


2) настраиваем для простого проекта [git]
  - в IDEA открываем терминал
  - [ git --help | less ] - удобненько посмотрим что есть
  - [ git init ] - создаем локальный репозиторий
    - появилась папка [ .git ]
  - [ git status ] - посмотреть что мы отслеживаем, а что нет
    - видим файлы и они отмечены как не включенные
  - [ touch ./.gitignore ] - правила игнорирования изменений
    [ git status ] - смотри текущее состояние
    - сделаем простое содержимое :
      [
         /.idea
         *.iml
         /target
      ]
  - [ git add <файл/папка> ] - так добавляем все папки и файлы
    [ git status ] - смотри текущее состояние
  - хотим настроить, чтобы комиты были от имени меня,
    тоесть пользователя с моим именем и @mail-ом.
    (*) параметр --global сделает настройку на уровне системы,
    а не только конкретно этого проекта, что для меня удобно.
    [ git config --global user.name "dzhukov40" ]
    [ git config --global user.email dzhukov40.v@mail.ru ]
    (*) проверяем -> [ git config --list ]
  - делаем первоначальный коммит с сообщением !
    [ git commit -m "First commit" ]
    (*) посмотреть историю коммитов -> [ git log ]
  - идем на [ github.com ] и создаем новый репозиторий
    назовем его как наш проект [groupID + artifactID]
    (*) например [ doneathome/experience ]
  - так-как мы уже создали локальный репозиторий, мы
    добавим его в наш локальный, а потом засинхронизируем
    [ git remote add origin <url.git> ] - добавляем
    (*) проверяем -> [ git config --list ]
    [ git push -u origin master ] - отправляем все,что есть 
    в ветке мастера !
    (*) можем удалить удаленный репозиторий [ git remote remove origin ]
    (*) попросят имя user и password от [ github.com ]
    (*) идем на [github.com] и радуемся
  - хотим подружить IDEA и GIT
    (*) шок - они уже дружат)))

3) скачать свой проект
  - [ git clone https://github.com/dzhukov40/proxy.git ./proxy ] ! УКАЖИ ПАПОЧКУ


4) работа с ветками
  - посмотреть все ветки [ git branch || git branch -a ]
  - создание новой ветки [ git checkout -b <имя_ветки>]
  - переход на ветку [ git checkout <имя_ветки> ]
  - вмержить веку в текущую ветку [ git merge <имя_ветки> ]
  - найти коммит по коментарию [ git log --grep="Commit message fragment" ]
  - перейти на коммит по хешу [ git checkout <хеш> ] 


 5) клонировать репозиторий можно как через git ссылку, так и через https
   - (*) чтобы не вводить каждый раз пароль надо копернуть ключ в гит репозиторий
   - гененрируем пару новую ключей (*) если у нас нет нагенеренной [ ssh-keygen ]
   - linux/windows [ cat ~/.ssh/id_rsa.pub ]
   - теперь идем на гитхаб и там в настройках добавляем этот ключ
   - меняем теперь remote "origin" url  на  git формат : [ vim .\.git\config ]

6) как удалить файл из локального индекса
  - [ git rm <имя_файла> ]


7) работаем со стешем ( git stash )
  - засовывем все изменения в стеш [ git stash ]
  - высовываем [ git stash pop ]  
  - посмотреть что есть в стеше [ git stash list ]
  - удалить все что есть в стеше [ git stash clear ]


8) как удалить локальный комит
  - [ HEAD~ ] указываем что откатиться надо на один комит назад
  - [ git reset --soft HEAD~ ] Перемещает ветку, на которую указывает HEAD
  - [ git reset --mixed HEAD~ ] Делает Индекс таким же как и HEAD
  - [ git reset --hard HEAD~ ] Делает Рабочий Каталог таким же как и Индекс.


9) как скачать изменения с удаленного репозитория
  - [ git fetch --all ]
  - [ git pull ]

  

[?] nop
  - nop

 
 
// #c 
#----------------------------------------------- 

 

#----------------------------------------------- 
 

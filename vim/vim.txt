---
Ресурсы:

// оф сайт
- обучение по [vimtutor]
 


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [ vim ] мощный консольный редактор


1) [Normal mode] - обычный режим ()
  - Попадаем из при открытии файла
  - из другого режима перейти в [Normal mode] нажать [esc] лучше 2-а раза
  - перемещения [h,j,k,l]
  - описание: в этом режиме мы следим, что нажимаем, так как символы не печатаются 
  в файл, а имеют смысл именно как команды для vim.

2) [Insert mode] - режим вставки.
  - Попадаем из [Normal mode] нажатием [i]
  - Попадаем из [Normal mode] нажатием [a] (кусор перемещается на один символ вперед)
  - Попадаем из [Normal mode] нажатием [A] (курсор переместится в конец строки)
  - Попадаем из [Normal mode] нажатием [c number mtion] (удаление и переход в режим)
  - Попадаем из [Normal mode] нажатием [o] (курсор под тукущей строкой, вставляя новую строку)
  - Попадаем из [Normal mode] нажатием [O] (курсор над тукущей строкой, вставляя новую строку)
  - описание: в этом режиме мы работаем с файлом, как в обычном
  текстовом редакторе.

3) [Visual mode] - режим выделения.
  - Попадаем из [Normal mode] нажатием [v]
  - описание: в этом режиме мы можем выделять текст от текущей позиции до какой-то, чтобы
  потом что-то сделать с выделенным кусочком. Например удалять текст.

4) [EXIT COMMAND] - как выйти из vim
  - [ :q! ] - выйти не сохраняя
  - [ :wq ] - выйти сохраняя

5) [SAVE FILE OR PART] - сохранение файла или части
  - [ :w <имя файла> ] - сохранение текущего файла в файл указанный в команде. <- не указав файл сохраним в текущий.
  - хотим выделить кусочек и сохранить в какой-то файл
    1) выделяем переходя в режим [v]
    2) жмем [ : ], появляется [ :'<,>' ]
    3) -> [ :'<,>'w <имя файла> ] добавляем командн [w] и жмем [Enter] 
    <- заметь что не надо указывать [ > ] перенаправление

4) [DELETE COMAND] - командыудаления вместе с движениями/перемещениями
  - [ number x ] - удаление числа символов, что после курсора
  - [ number X ] - удаление числа символов, что перед курсором
  - [ dw ] - удалить слово (посл нажатием)
  - [ d$ ] - удалить от курсора до конца строки (посл нажатием)
  
5) команды делятся на операторы и движения [operator и motion]
  - [ d motion ] - это синтаксис оператора [d]
  - [ motion ] - это аргумент для нашего оператора [ w , e , $ ]
  - [ motion ] - применяя без оператора мы перемещаем курсо!
  - [ w ] - это [motion] перемещение в начало слова
  - [ e ] - это [motion] перемещение в конец слова
  - [ $ ] - это [motion] перемещение в конец строки
  - [ 0 ] - это [motion] перемещение в начало строки
  - [ d number motion ] - добавлять цыфры для повтора [ 2w , 3e ]
  - [ number dd ] - удалит указанное число строчек. (посл нажатием)

6) [UNDO COMMAND] - команы отмены действия
  - [ u ] - вернет назад последнее изменение
  - [ U ] - Это вернет строчку в первоначальное состояние
  - [ ctrl + r] - redo реверс команды [ u ]

7) [PUT COMMAND] - вставить текст из буфера
  - [p] - вставляет строчку из буфера (при удалении строчка попадает в буфер)

8) [REPLASE COMMAND] - режим вставки символов поверх существующих
  - [ R ] - крутой режим (insert).
  - [ r ] - ставим курсор на символ и посл нажатия вводим символ замены.

9) [CURSOR LOCATION AND FILE STATUS] - посмотреть текущую строчку и переместится
  - [ ctrl + g ] - покажет полное имя редактируемого файла, текущую линию курсора
  и колонку, общее число строк.
  - [ gg ] - переместиться в начало файла
  - [ number G ] - переместиться в конец файла если число не указали. Узазав переместимся
  на уканную строчку.

10) [SEARCH COMMAND] - поиск
  - [ / ] - переход в режим поиска (Поиск от курсора и вниз). Вводим поисковую фразу
  - [ ? ] - переход в режим поиска (Поиск от курсора и вверх). Вводим поисковую фразу
  - [ n ] - это бег по результатам поиска вниз
  - [ N ] - это бег по результатам поиска вверх
  - [ ctrl + o / i ] - перемещение к ранее посещенным меткам назад и вперед. метки
  создаются при поиске, такчто закончив поиск все равно можно побегать по меткам.

11) [MATCHING PARENTHESES SEARCH] - бег по структуре из скобок
  - [ % ] - переход до логической закрывающей скобки !
  - тоесть удобно бегать по составному оператору. Находясь в сложной вложенной
  структуре можно легко по слоям вложенности перемещаться.

12) [SUBSTITUTE COMMAND] - текстовая замена
  - [ :%s/old/new/g ] - заменяет по всему файлу совпадение старого [old] на новое [new] в строке!
  символ [g] в конце указываем, что произвести замену не только для первого совпадения.
  - [ :%s/old/new/g ] - тут знак [g] - означаем по всему файлу! (символ [g] можно убрать)


13) [EXECUTE AN EXTERNAL COMMAND] - выполнение внешних команд
  - [ !<наша команда> ] - ну перемещатся вроде не можем, а ВСЕ ОСТАЛЬНОЕ МОЖЕМ
  - примерчик создать файл и записать в него текст и потом посмотреть
    1) [ !touch ./tort.txt ]
    2) [ !echo "текст" > ./tort.txt ]
    3) [ !cat ./tort.txt ]

14) [RETRIEVING AND MERGING FILES] - вставить данные из другого файла
  - [ :r <имя файла> ] - там где стоял курсов вставится содержимое указанного файла.
  - [ :r !<команда>] - можем вставить вывод команды в файл.

15) [SET OPTION] - есть куча настроек которые можно включить/выключить
  - [ :set <параметр настройки> ] - хотим что-то настроить
  - [ :set ic ] - устанавливаем параметр игнорирования регистра при поиске
  - [ :set noic ] - устанавливаем параметр не игнорирования регистра при поиске

16) [GETTING HELP] - получить помощь, подсказки
  - [ :help ] - получить помощ в новом окне
  - [ CTRL+w ] - это как переключаться между окнами ( w - нажать 2-а раза)

17) [SPLIT WINDOW] - разделить экран
  - [ :split <имя файла> ] - получаем разделение экрана, файл не указать получим тот же файл
  - [ :vsplit <имя файла> ] - тоже самое только по вертикали
  - [ CTRL+w ] - это как переключаться между окнами ( w - нажать 2-а раза)

18) [COPY COMMAND] - команда копирования
  - [ y number motion ] - жмем для копирования в обычном режими указав [motion].
  - Можно пользоваться [visual режимом], чтобы выделять и жать [ y ].

 





[?] nop
  - nop

 
 
// #c 
#----------------------------------------------- 

 

#----------------------------------------------- 
 

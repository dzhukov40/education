#!/bin/bash

msg1="http://www.opennet.ru/docs/RUS/zlp/index.html
!-!  копирование каталога с содержимым [ cp -r ./test_8 ./test_9 ]"

msg2=" Одни процессы могут порождать другие процессы, образовывая 
древовидную структуру. Порождающие процессы называются родителями 
или родительскими процессами, а порожденные - потомками или дочерними 
процессами. На вершине этого [дерева] находится процесс [init], который 
порождается автоматически ядром в процесссе загрузки системы.

К каждому процессу в системе привязана пара целых неотрицательных чисел: 
идентификатор процесса [PID (Process IDentifier)] и идентификатор 
родительского процесса [PPID (Parent Process IDentifier)]. Для каждого 
процесса [PID] является уникальным (в конкретный момент времени), а [PPID]
равен идентификатору процесса-родителя."

msg3='
  Процесс может узнать свой идентификатор (PID), а также 
  родительский идентификатор (PPID) при помощи системных 
  вызовов [getpid()] и [getppid()]. 
  Для использования [getpid()] и [getppid()] в программу 
  должны быть включены директивой [#include] заголовочные 
  файлы [unistd.h] и [sys/types.h] (для типа [pid_t]).
  [pid_t getpid (void);]
  [pid_t getppid (void);]
'

echo "$msg1"
echo ""
echo "$msg2"
echo ""
echo "$msg3"

#!/bin/bash

msg1="http://www.opennet.ru/docs/RUS/zlp/index.html"

msg2="Окружение (environment) или среда - это набор 
пар ПЕРЕМЕННАЯ=ЗНАЧЕНИЕ, доступный каждому 
пользовательскому процессу. Иными словами, 
окружение - это набор переменных окружения."

msg3='
посмотреть переменные окружения [env] 
посмотреть переменную окружения [echo $USER]

переменная обьявленная в [bash] это переменная оболочки [TEST="1"]
чтобы включить такую переменную в основное окружение [export TEST]
или можно сразу сделать так [export TEST_2=tort]

  В заголовочном файле [stdlib.h] объявлена функция [getenv]
  вотпрототип ф-ии [char * getenv (const char * name);]

  Функция эта работает очень просто: если в качестве аргумента 
  указано имя существующей переменной окружения, то функция 
  возвращает указатель на строку, содержащую значение этой переменной; 
  если переменная отсутствует, возвращается NULL.

!-> Теперь разберемся с тем, откуда берется окружение. Любая запущенная 
и работающая в Linux программа - это процесс. Запуская дважды одну и 
ту же программу, вы получаете два процесса. У каждого процесса (кроме init) 
есть свой процесс-родитель. Когда вы набираете в командной строке vim, в 
системе появляется новый процесс, соотвествующий текстовому редактору vim; 
родительским процессом здесь будет оболочка (bash, например). Для самой 
оболочки новый процесс будет дочерним. Мы будем подробно изучать процессы 
в последующих главах книги. Сейчас же важно одно: новый процесс получает 
копию родительского окружения. Из этого правила существует несколько 
исключений, но мы пока об этом говорить не будем. Важно то, что у кажного 
процесса своя независимая копия окружения, с которой процесс может делать 
все что угодно. Если процесс завершается, то копия теряется; если процесс 
породил другой, дочерний процесс, то этот новый процесс получает копию 
окружения своего родителя. Мы еще неоднократно столкнемся с окружением при 
изучении многозадачности.'

echo "$msg1"
echo ""
echo "$msg2"
echo ""
echo "$msg3"

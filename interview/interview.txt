---
Ресурсы:

// оф сайт
- [   ]


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [ interview ] вопросы для собеседования



0) Общие вопросы
  - [ MAIN ]:
    - как проходит код от разработки до продакшена
    - если бы у вас была безграничная власть чтобы вы поменяли в своей компании
  - [ ADDITION ]:
    - почему уходите с прошлого места что ждете от нового места?
    - как был построен процесс разработки


1) релевантный опыт
  - [ MAIN ]:
    - логирование
    - мониторинг
    - трассировка
    - докер, кубернетис helm 


2) Linux
  - [ MAIN ]:
    - [ ps -aux | grep ... ] как посмотреть запущенно ли наше приложение
    - [ ssh ] как подключиться удаленному серверу
  - [ ADDITION ]
    - [ scp ] как скопировать файл
    - [ vim ] как отредактировать файл в консоле


3) Java
  - [ MAIN ]:
    - [ lombok ] пользуетесь ли вы какие плюсы дает, какие минусы?
    - [ Collection ] какие использовали о каких слышали
      - [ HashMap ] какая может быть сложность получения обьекта
    - приходилось ли профилировать приложения, поиск узких мест, поиск утечек памяти
    - [ Java 8 ] 
     - [ Optional ] зачем ввели 
     - [ default ] зачем ввели дефолтные методы в интерфейсы
     - [ functional ] что такое функциональный интерфейс ?
     - [ streamAPI ] 
       - есть лист из чисел Integer как получить лист чисел больше 10 как String.   
  - [ ADDITION ]
    - [ аннотации и интерфейсы ] маркерный интерфейс в чем разница с аннотацией


4) Spring
  - [ MAIN ]:
    - что такое спринг, зачем нужен, что из спринга использовали
    - [ scope ] скоупы бина в spring
    - [ @Serbice @Component @RestController @Bean ] как можно получить бин?
    - [ DI ] какие варианты есть инжектировать бин?
    - [ application.yaml ] какие варианты получения данных в коде    
    - [ profile ] как разделялись конфиги на дев прод и тд ?


5) Spring boot
  - [ MAIN ]:
    - зачем нам spring-boot
    - [ autoconfiguratio ] как работает ?


6) DВ
  - [ MAIN ]:
    - [ профилирование ] решать вопрос с медленным запросом
    - [ index ] 
    - маштобирование базы данных
    - [ ORM ] зачем нужна
    - [ наследование ] в Java усть наследование как это мапиться на реляционную БД
    - [ многие ко многим ] связь в бд?


7) Docker
  - [ MAIN ]:
    - [ ] что такое Docker
    - [ ] как ускоряли запуск java приложений 
    - [ Multistage build ]
    - [ docker-maven-plugin ] как собирали докер образ 
    - [ docker-compouse ] зачем нужен использовали ли


8) Kubernetes
  - [ MAIN ]:
    - [ deployment ] во что заворачивали java приложение
    - [ Daemonset ] в чем отличие демонсета от деплоймента
    - [ secrets ] как хранились
    - [ Ingress / Egress ] как трафик в кластер следует заводить и как заводить


9) CI / CD
  - [ MAIN ]: 
    - расскажите как код от разработчика попадает на прод
    - [ jobs ] приходилось ли писать джобы 
    - [ ] были ли анализаторы кода


10) безопасность
  - 


11) Git  
  -


12) Архитектура
  - построить систему hh



13) High load
  - [ MAIN ]: 
    - сколько запросов обрабатывала ваша система
    - как найти узкое место в приложении
    - летит куча маленьких сообщений как их обрабатывать
    - в чем отличия kafka от rabitMQ















[?] nop
  - nop

 
 
// #c 
#----------------------------------------------- 

 

#----------------------------------------------- 
 

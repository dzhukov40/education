---
Ресурсы:

// оф сайт
- [ https://micrometer.io/ ]
 


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [ micrometer ]  используется для сбора метрик приложения JVM 
и позволяет экспортировать данные в различные системы мониторинга.




1) подключаем к spring-boot приложению
  - в зависимости подключаем:
    - [ compile("org.springframework.boot", "spring-boot-starter-web", springVer) ]
    - [ compile("org.springframework.boot", "spring-boot-starter-actuator", springVer) ]
    - [ compile("io.micrometer", "micrometer-registry-prometheus", micrometerVer) ]
  - теперь добавлчем настройкм в [ application.yml ]
    [ 
      management:
          endpoints:
              enabled-by-default: false
              web.exposure.include: health, prometheus
          endpoint:
              health.enabled: true
              prometheus.enabled: true
    ]
  - посмотрим в актуаторе, что появился url для метрик промитеуса
    - [ http://localhost:8089/sdelki/actuator/ ]
    - [ http://localhost:8089/sdelki/actuator/prometheus ] тут метрики


2) самый простой спосод добавить свою метрику
  - [ @Timed ] вешаем над методом, метод должен вызываться через spring proxy


3) классические способы формирования метрик
  - [ https://www.baeldung.com/micrometer ] статья с примерами
    - [ Counter ] создаем счетчик, есть ограничение, что можем только монотонно увеличивать
    - [ Timers ]
      - [ Timer ] мозно измерять время выпольнения функций и еще считать их колличество
      - [ LongTaskTimer ] это использовать для измерения больших кусков времени
    - [ Gauge ] датчик, мы можем определить функцю, которая выполниться и ее результат это значение метрики
    - [ DistributionSummary ] позволяет увеличивать значение на произвольное значение




  
[?] как добавить свои метрики
  - [ @Timed ] можно поставить эту аннотацию на метод контроллера и  смотреть время и количество вызовов
    - [ http ] будет в этом скоупе

[?] nop
  - nop

 
 
// #c 
#----------------------------------------------- 

 

#----------------------------------------------- 
 

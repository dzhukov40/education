---
Ресурсы:

// оф сайт
- [ https://memcached.org/ ]
- команды [ https://github.com/memcached/memcached/wiki/Commands ]
- команды [ https://www.tutorialspoint.com/memcached/index.htm ]
 


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [ memcached ] сервис кэширования данных в оперативной памяти на основе хеш-таблицы.


 

1) устанавливаем [ https://memcached.org/downloads ]
  - [ sudo apt update && sudo apt install memcached -y ]
  

2) настройка
  - работа memcached задается через файл /etc/memcached.conf
  

3) работа
  - для общения с [ memcached ] можно использовать [ telnet ] 
    - выйти из [ telnet ] -> команда [ quit ] 
    - простой пример
      - подключаемся [ telnet localhost 11211 ]
      - сетаем значение 
        [ set greeting 1 0 11 
          Hello World! ]
      - получаем значение [ get greeting ]
  - выполнить одну команду [ echo -e 'КОМАНДА\r' | nc localhost 11211 ]
    - пример [ echo -e 'stats\r' | nc localhost 11211 ] 
    - получить значение [ echo -e 'get greeting\r' | nc localhost 11211 ]


4) основные команды
  - описание команд [ https://www.tutorialspoint.com/memcached/index.htm ]
  - ПОЛУЧИТЬ:
    - get - получить значение по ключу
      - пример [ echo -e 'get key_name\r' | nc localhost 11211 ]
  - ДОБАВИТЬ:
    - add — добавить новую пару ключ-значение;
    - replace — заменить значение существующего ключа;
    - set — если ключ не существует, то работает как add, иначе как replace.
    - (*) [ <команда> <ключ> <флаг> <ttl> <размер в байтах> <значение> ]
      - пример [ echo -e 'add KEY 0 4 3\r\nVAL\r' | nc localhost 11211 ]
  - УДАЛИТЬ:
    - delete -удалить значение по ключу
       - пример [ echo -e 'delete key_name\r' | nc localhost 11211 ] 


5) как посмотреть все ключи содержащиеся в [ memcached ]
  - [ echo -e 'stats items\r' | nc localhost 11211 ]
  - обращаем внимание на [ STAT items:1:number 2 ]
    - Номер, написанный после items является идентификатором slab. 
    - каждый slab хранит пары, у которых размер значения лежит в определенном диапазоне. 
  - [ stats cachedump <slab_id> <number_of_keys_to_display> ]
    - пример [ echo -e 'stats cachedump  1 100\r' | nc localhost 11211 ]


6) для числовых значений есть отдельные команды
  - incr - увеличить значение на <число>
  - decr - уменьшить на <число>
    - шаблон [ <команда> <имя ключа> <на сколько поменять> ]
    - пример [ echo -e 'incr key_name 3\r' | nc localhost 11211 ]
    - пример [ echo -e 'decr key_name 3\r' | nc localhost 11211 ]




[?] nop
  - nop

 
 
// #c 
#----------------------------------------------- 

 

#----------------------------------------------- 
 

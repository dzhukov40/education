---
Ресурсы:

// оф сайт
- [ --- ]
 


---
элементы документа 

[?] - информация потенциально для многократного использования
[!] - была ошибка, недочет, нашли решение 
[*] - важное контекстное примечание 
[#<имяТега>] - так можим выносить различного рода информацию, оставляя ссылку 

---
краткое описание 

- [ 
    чистая архитектура 
    ( искусство разработки программного обеспечения )
  ] 
  - продолжение культовой книги "Совершенный код"
  - Clean Architecture: 
      A Craftsman's Guide to Software Structure and Design 
      (Robert C. Martin Series)


1) [ Часть 1 ] Введение
   [ Часть 1 / Глава 1 ] Что такое дизайн и архитектура?
    -> общее
      - Одна из целей этой книги — определить раз и навсегда, 
        что такое дизайн и архитектура.
        Прежде всего, я утверждаю, что между этими понятиями нет никакой разницы
    -> Цель?
      - Цель архитектуры программного обеспечения — уменьшить человеческие
        трудозатраты на создание и сопровождение системы. 
      - Если трудозатраты увеличиваются с выходом каждой новой версии, 
        система имеет плохой дизайн 
    -> Пример из практики
      - в примере у компании все больше сотрудников, 
        производительность застопорилась, стоимость строчки кода растет
      - Чем обусловлено такое значительное изменение продуктивности? 
      - Почему строка кода в версии 8 продукта стоит в 40 раз дороже, чем в версии 1?
    -> Причины неприятностей
      - Причины неприятностей перед вашими глазами. 
        Когда системы создаются второпях, когда увеличение штата программистов 
        это единственный способ продолжать выпускать новые версии и когда 
        чистоте кода или дизайну уделяется минимум внимания или не уделяется вообще, 
        можно даже не сомневаться, что такая тенденция рано или поздно 
        приведет к краху. 
    -> Точка зрения руководства
      - для выпуска первой версии выплатили зарплат на 100т, 
        а текущая версия требует в 100 раз больше 
    -> Что не так?
      - вспомним басню о зайце и черепахе
        - «медленный и постоянный побеждает в гонке»;
        - «в гонке не всегда побеждает быстрейший, а в битве — сильнейший»;
        - «чем больше спешишь, тем меньше успеваешь» 
    -> Заключение
      - Любой организации, занимающейся разработкой, лучше всего избегать
        самонадеянных решений и с самого начала со всей серьезностью отнестись
        к качеству архитектуры ее продукта


2) [ Часть 1 ] Введение
   [ Часть 1 / Глава 2 ] История о двух ценностях
  - общее
    - всякая програмная система имеет две ценности:
      поведение и структура
  -> Поведение
    - Первая ценность программного обеспечения — его поведение
    - Первая задача это заставить компьютер делать что-то полезное)
    - Но это не единственная ответственность разработчика
  -> Архитектура
    - Идея программного обеспечения состоит в том, 
      чтобы дать простую возможность изменять поведение компьютеров
    - Для достижения этой цели программное обеспечение должно 
      быть податливым — то есть должна быть возможность легко изменить его
    - Сложность в таких случаях должна быть
      пропорциональна лишь масштабу изменения, но никак не его форме.
    - создав первую версию мы сделали некую форму ПО и дальнейшие 
      изменения могут укладываться в эту форму или нет
    - Проблема, конечно же, кроется в архитектуре системы. 
      Чем чаще архитектура отдает предпочтение какой-то одной форме, 
      тем выше вероятность, что встраивание новых особенностей в эту структуру 
      будет даваться все сложнее и сложнее. 
      (*) Поэтому архитектуры должны быть максимально независимыми от формы.
  -> Наибольшая ценность
    - Функциональность или архитектура? Что более ценно? 
      Что важнее — правильная работа системы или простота ее изменения?
    - 



3) [ Часть 2 ] Начальные основы: парадигмы программирования
   [ Часть 2 / Глава 3 ] Обзор парадигм
   - TODO: ???





clean-architecture-book add new part of summery


  стр 37 в chrome



[?] nop
  - nop

 
// #
#----------------------------------------------- 


#----------------------------------------------- 
 
